// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace Logistics.DbAccess
{
    public partial class LogisticContext : DbContext
    {
        public LogisticContext()
        {
        }

        public LogisticContext(DbContextOptions<LogisticContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Cities> Cities { get; set; }
        public virtual DbSet<LogisticsCenters> LogisticsCenters { get; set; }
        public virtual DbSet<Routes> Routes { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Cities>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.Property(e => e.DateUpdated).HasColumnType("datetime");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<LogisticsCenters>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.Property(e => e.DateUpdated).HasColumnType("datetime");

                entity.HasOne(d => d.City)
                    .WithMany(p => p.LogisticsCenters)
                    .HasForeignKey(d => d.CityId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_LogisticsCenters_Cities");
            });

            modelBuilder.Entity<Routes>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.Property(e => e.DateUpdated).HasColumnType("datetime");

                entity.Property(e => e.Distance).HasColumnType("decimal(18, 2)");

                entity.HasOne(d => d.EndCity)
                    .WithMany(p => p.RoutesEndCity)
                    .HasForeignKey(d => d.EndCityId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Routes_Cities_End");

                entity.HasOne(d => d.StartCity)
                    .WithMany(p => p.RoutesStartCity)
                    .HasForeignKey(d => d.StartCityId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Routes_Cities_Start");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}